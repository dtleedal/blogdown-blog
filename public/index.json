[{"authors":["admin"],"categories":null,"content":"I\u0026rsquo;m a data scientist with 6 years of commercial experience working with Environmental, Insurance, and site planning data. Before working in the private sector I spent several years working on a number of post-doc research projects in flood risk management and geoengineering assessment - all with a heavy focus on computational science.\n","date":1554595200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1554595200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/david-leedal/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/david-leedal/","section":"authors","summary":"I\u0026rsquo;m a data scientist with 6 years of commercial experience working with Environmental, Insurance, and site planning data. Before working in the private sector I spent several years working on a number of post-doc research projects in flood risk management and geoengineering assessment - all with a heavy focus on computational science.","tags":null,"title":"David Leedal","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":[],"categories":["r"],"content":"       What direction is this road going? I’m kicking off this blog with a geospatial example. I did some work recently where I needed to know:\n the nearest section of road to a given point; and, the road’s approximate bearing.  It’s a long story why this was needed but getting there involved some useful discoveries so I’m repeating the crux of it here. Interestingly, shortly after writing the scripts, I came across Geoff Boeing’s beautiful post visualising similar information for 25 cities.\nThe best approach I could think of was to use OpenStreetMap data. Firstly associate a point with it’s nearest highway ‘way’ feature. Then get the coordinates of the beginning and endpoint of this way feature and use the pair of points to define a bearing. Makes sense? OK, here we go:\n Get the packages library(geosphere) library(sf) ## Linking to GEOS 3.7.2, GDAL 2.4.2, PROJ 5.2.0 library(leaflet) library(osmdata) ## Data (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright library(data.table) library(ggmap) ## Loading required package: ggplot2 ## Google\u0026#39;s Terms of Service: https://cloud.google.com/maps-platform/terms/. ## Please cite ggmap if you use it! See citation(\u0026quot;ggmap\u0026quot;) for details.  Organise the data I’m going to use 4 points dotted around the Northern Quarter in Manchester (UK). Let’s put them in a data.frame:\ndf \u0026lt;- data.frame(ID = 1:4, Longitude = c(-2.232086, -2.235675, -2.233628, -2.232453), Latitude = c(53.484510, 53.484318, 53.484103, 53.481176), stringsAsFactors = FALSE) Then let’s convert to an sf (spatial features) points object. I’ve found myself using this next command over and over.\ndf.sf \u0026lt;- st_as_sf(df, coords = c(\u0026quot;Longitude\u0026quot;, \u0026quot;Latitude\u0026quot;), crs=4326) The crs argument is telling st_as_sf that these coordinates are using the WGS84 coordinate datum which has a EPSG code of 4326. This is needed if we want to ‘project’ the points out of latitude/longitude format and into distance north and west from a given reference point. If you’re not familiar with this concept here’s a good pdf tutorial.\n Visualise At this point it’s always good to take a look at what we’ve got. I’m going to use leaflet as it works well with Blogdown.\nm \u0026lt;- leaflet(df) %\u0026gt;% addTiles() %\u0026gt;% addCircleMarkers( lng = ~Longitude, lat = ~Latitude, radius = 8, color = \u0026quot;green\u0026quot;, stroke = FALSE, fillOpacity = 0.9 ) m  {\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"\u0026copy; OpenStreetMap contributors, CC-BY-SA\"}]},{\"method\":\"addCircleMarkers\",\"args\":[[53.48451,53.484318,53.484103,53.481176],[-2.232086,-2.235675,-2.233628,-2.232453],8,null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":false,\"color\":\"green\",\"weight\":5,\"opacity\":0.5,\"fill\":true,\"fillColor\":\"green\",\"fillOpacity\":0.9},null,null,null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[53.481176,53.48451],\"lng\":[-2.235675,-2.232086]}},\"evals\":[],\"jsHooks\":[]}  Get information from OSM this.bbox \u0026lt;- st_bbox(df.sf) osm.road.types = c(\u0026quot;motorway\u0026quot;, \u0026quot;motorway_link\u0026quot;, \u0026quot;trunk\u0026quot;, \u0026quot;trunk_link\u0026quot;, \u0026quot;primary\u0026quot;, \u0026quot;primary_link\u0026quot;, \u0026quot;secondary\u0026quot;, \u0026quot;secondary_link\u0026quot;, \u0026quot;tertiary\u0026quot;, \u0026quot;unclassified\u0026quot;, \u0026quot;residential\u0026quot;) out \u0026lt;- osmdata::opq (this.bbox) %\u0026gt;% #add_osm_feature (key = \u0026quot;highway\u0026quot;, value = c(osm.road.types, paste0(osm.road.types, \u0026quot;_link\u0026quot;))) %\u0026gt;% osmdata::add_osm_feature (key = \u0026quot;highway\u0026quot;, value = osm.road.types) %\u0026gt;% osmdata::osmdata_sf(quiet = F) ## Issuing query to Overpass API ... ## Request failed [504]. Retrying in 1 seconds... ## Rate limit: 0 ## Query complete! ## converting OSM data to sf format out ## Object of class \u0026#39;osmdata\u0026#39; with: ## $bbox : 53.481176,-2.235675,53.48451,-2.232086 ## $overpass_call : The call submitted to the overpass API ## $meta : metadata including timestamp and version numbers ## $osm_points : \u0026#39;sf\u0026#39; Simple Features Collection with 205 points ## $osm_lines : \u0026#39;sf\u0026#39; Simple Features Collection with 45 linestrings ## $osm_polygons : \u0026#39;sf\u0026#39; Simple Features Collection with 0 polygons ## $osm_multilines : NULL ## $osm_multipolygons : NULL road.lines \u0026lt;- out$osm_lines nrow(road.lines) ## [1] 45 The opq query returns an osmdata object with various items. The section we’re interested in is the osm_lines. These are the way objects representing road segments. The query has returned 44 road segments that intersected the bounded box of our 4 points (at the time of posting).\n Get candidate closest roads to points We’re just testing here with 4 points. But you may want to do something similar with thousands. So it’s useful to be able to identify candidate roads out of all the road segments returned by opq that are within a specified distance of the points. To do this we project the points and the road segments to a suitable coordinate reference system (for Manchester, the UK Ordnance Survay EPSG: 27700 is a good choice), apply a 50m buffer to the points, then identify which road segments intersect with this buffer.\ndf.sf.tf \u0026lt;- st_transform(df.sf, 27700) # US National Atlas Equal Area projection road.lines.tf \u0026lt;- st_transform(road.lines, 27700) buffer.size \u0026lt;- 50 df.sf.tf.bf \u0026lt;- st_buffer(df.sf.tf, buffer.size) intersected.items \u0026lt;- st_intersects(df.sf.tf.bf, road.lines.tf, sparse = F) dim(intersected.items) ## [1] 4 45 The dimensions show we have 4 rows, one for each of our 4 points, and 44 columns, one for each OSM road segment within our bounding box. The matrix contains TRUE/FALSE values where TRUE indicates a point of intersection.\n Get the closest road segment So now, using the location of TRUE values in each row or the intersected.items matrix, we can subset the road.lines so that we’re only checking which road is the closest to the point from within a group that we know are at most 50m away. The st_coordinates function is useful to return just the coordinate information from an sf object, and the dist2Line function calculates the shortest distance between a point and a polyline (There are some good details about doing this type of calculation at the Movable Type website.\nnumber.of.point \u0026lt;- nrow(intersected.items) distances.vect \u0026lt;- matrix(NA_real_, nrow = nrow(df.sf.tf), ncol = 4) colnames(distances.vect) \u0026lt;- c(\u0026quot;distance\u0026quot;, \u0026quot;lon\u0026quot;, \u0026quot;lat\u0026quot;, \u0026quot;ID\u0026quot;) for (i in seq_len(number.of.point)) { # Out of all 44 road segments, get the index of the ones that are within 50m of point i. original.road.idx \u0026lt;- which(intersected.items[i, ] == TRUE) distances.vect.temp \u0026lt;- geosphere::dist2Line(p = st_coordinates(df.sf[i, ]), line = as_Spatial(road.lines[original.road.idx, ])) distances.vect.temp[1, \u0026quot;ID\u0026quot;] \u0026lt;- original.road.idx[distances.vect.temp[1, \u0026quot;ID\u0026quot;]] distances.vect[i, ] \u0026lt;- distances.vect.temp } distances.vect ## distance lon lat ID ## [1,] 5.061288 -2.232137 53.48448 44 ## [2,] 3.500525 -2.235712 53.48430 10 ## [3,] 6.111912 -2.233558 53.48407 5 ## [4,] 5.541079 -2.232491 53.48122 19 So now, not only have we found the nearest road segments, we’ve also got the coordinates of the nearest point on the road segments to our original points stored in the lon/lat columns distances.vec. We’ve snapped our points to the roads which is a bonus.\n Get the road section bearings Now we extract the 4 closest road segments from the full set of 44 and add the useful features we’ve created so far. The challenge here was to get the coordinates of the points making up our closest road segments, and extract just the first and last coordinate pairs of each. I did this using data.table. When retrieving the coordinates via st_coordinates a third column labelled L1 is created with a group ID of each polyline object. This can be used as a grouping variable in data.table. The .SD[…] syntax holds the sub-data.table once the full data.table has been split by the grouping variable, finally 1 and .N are the first row and last row of each sub-data.table. There are going to be many other ways to do this but if this process was applied to thousands of points then the speed of data.table will pay off. Once we have the beginning and end coordinate pairs it’s straightforward to call the bearing function from the geosphere package.\nout \u0026lt;- road.lines[as.integer(distances.vect[, \u0026quot;ID\u0026quot;]), ] out$dist.to.nearest \u0026lt;- distances.vect[, \u0026quot;distance\u0026quot;] out$snap.lat \u0026lt;- distances.vect[, \u0026quot;lat\u0026quot;] out$snap.lon \u0026lt;- distances.vect[, \u0026quot;lon\u0026quot;] matching.road.lines.coords \u0026lt;- data.table::as.data.table(st_coordinates(out)) matching.road.lines.coords.begin \u0026lt;- as.matrix(matching.road.lines.coords[, .SD[1, .(X, Y)], by = \u0026quot;L1\u0026quot;][, L1 := NULL]) matching.road.lines.coords.end \u0026lt;- as.matrix(matching.road.lines.coords[, .SD[.N, .(X, Y)], by = \u0026quot;L1\u0026quot;][, L1 := NULL]) matching.road.lines.bearing \u0026lt;- geosphere::bearing(matching.road.lines.coords.begin, matching.road.lines.coords.end) out$bearing \u0026lt;- (matching.road.lines.bearing + 360) %% 360 out$bearing ## [1] 133.2409 316.6075 217.5574 258.1974  Plot with estimated bearing In order to visualise the estimated road bearing for our 4 points we need to add arrow endpoints information. We can do this with a little trigonometry.\nout$delta.x \u0026lt;- sin((pi*out$bearing) / 180) * 0.00025 out$delta.y \u0026lt;- cos((pi*out$bearing) / 180) * 0.00025 Now we have everything we need to plot the snapped locations and show an arrow with our road segment bearing.\n Summary The results are pretty good, definitely good enough to classify a point into one of the 8 compass bearing directions: N, NE, E… etc. In this post we’ve explored working with sf spatial points, we’ve generated and run an OSM overpass filter and retrieved matching results, and we’ve used Leaflet and ggmap to visualise results. I hope you’ve found this useful.\n ","date":1593993600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594031731,"objectID":"c831559fd6c150f6b7eaf95f37d67943","permalink":"/post/collecting-highway-bearings/","publishdate":"2020-07-06T00:00:00Z","relpermalink":"/post/collecting-highway-bearings/","section":"post","summary":"What direction is this road going? I’m kicking off this blog with a geospatial example. I did some work recently where I needed to know:","tags":["r","geospatial","sf","osm"],"title":"Collecting Highway Bearings","type":"post"},{"authors":["David Leedal"],"categories":null,"content":" Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["source themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic  Academic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click  PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions?  Ask\n Documentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["David Leedal","robert ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["source themes"],"title":"An example journal article","type":"publication"},{"authors":["David Leedal","robert ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["source themes"],"title":"An example conference paper","type":"publication"}]