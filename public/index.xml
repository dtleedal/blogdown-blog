<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dave&#39;s data science</title>
    <link>/</link>
      <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <description>Dave&#39;s data science</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Thu, 28 Jun 2018 00:00:00 +0100</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Dave&#39;s data science</title>
      <link>/</link>
    </image>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Collecting Highway Bearings</title>
      <link>/post/collecting-highway-bearings/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/collecting-highway-bearings/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leaflet/leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leafletfix/leafletfix.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4-compressed.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/rstudio_leaflet/rstudio_leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet-binding/leaflet.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;what-direction-is-this-road-going&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What direction is this road going?&lt;/h3&gt;
&lt;p&gt;I’m kicking off this blog with a geospatial example. I did some work recently where I needed to know:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the nearest section of road to a given point; and,&lt;/li&gt;
&lt;li&gt;the road’s approximate bearing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s a long story why this was needed but getting there involved some useful discoveries so I’m repeating the crux of it here. Interestingly, shortly after writing the scripts, I came across &lt;a href=&#34;https://geoffboeing.com/2018/07/comparing-city-street-orientations/&#34;&gt;Geoff Boeing’s beautiful post&lt;/a&gt; visualising similar information for 25 cities.&lt;/p&gt;
&lt;p&gt;The best approach I could think of was to use OpenStreetMap data. Firstly associate a point with it’s nearest highway ‘way’ feature. Then get the coordinates of the beginning and end of the feature and use the pair of points to define a bearing. Makes sense? OK, here we go:&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;get-the-packages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Get the packages&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(geosphere)
library(sf)
## Linking to GEOS 3.7.2, GDAL 2.4.2, PROJ 5.2.0
library(leaflet)
library(osmdata)
## Data (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright
library(data.table)
library(ggmap)
## Loading required package: ggplot2
## Google&amp;#39;s Terms of Service: https://cloud.google.com/maps-platform/terms/.
## Please cite ggmap if you use it! See citation(&amp;quot;ggmap&amp;quot;) for details.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;organise-the-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Organise the data&lt;/h3&gt;
&lt;p&gt;To keep things manageable I’m going to use 4 points dotted around the Northern Quarter in Manchester (UK). I’ll put them in a data.frame:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- data.frame(ID = 1:4,
 Longitude = c(-2.232086, -2.235675, -2.233628, -2.232453),
 Latitude = c(53.484510, 53.484318, 53.484103, 53.481176), stringsAsFactors = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then I’ll convert to an &lt;code&gt;sf&lt;/code&gt; (spatial features) multi point object. I use this command over and over.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df.sf &amp;lt;- st_as_sf(df, coords = c(&amp;quot;Longitude&amp;quot;, &amp;quot;Latitude&amp;quot;), crs=4326)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The crs argument is telling st_as_sf that these coordinates are WGS84 by referencing the appropriate EPSG code 4326 (it’s a good idea to memorise that number!). This is needed later when I project the points out of latitude/longitude format and into distance-from-bottom-left format. If you’re not familiar with this concept &lt;a href=&#34;https://www.nceas.ucsb.edu/sites/default/files/2020-04/OverviewCoordinateReferenceSystems.pdf&#34;&gt;here’s a good pdf tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;visualise&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Visualise&lt;/h3&gt;
&lt;p&gt;At this point I’ll take a look at the 4 points. I’m using leaflet which works well with Blogdown.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;m &amp;lt;- leaflet(df) %&amp;gt;% addTiles() %&amp;gt;% addCircleMarkers(
  lng = ~Longitude,
  lat = ~Latitude,
    radius = 8,
    color = &amp;quot;green&amp;quot;,
    stroke = FALSE, fillOpacity = 0.9
  )
m&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addCircleMarkers&#34;,&#34;args&#34;:[[53.48451,53.484318,53.484103,53.481176],[-2.232086,-2.235675,-2.233628,-2.232453],8,null,null,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:false,&#34;color&#34;:&#34;green&#34;,&#34;weight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:&#34;green&#34;,&#34;fillOpacity&#34;:0.9},null,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;limits&#34;:{&#34;lat&#34;:[53.481176,53.48451],&#34;lng&#34;:[-2.235675,-2.232086]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;get-information-from-openstreetmap&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Get information from OpenStreetMap&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;opq&lt;/code&gt; query from the &lt;code&gt;osmdata&lt;/code&gt; package forms an OSM overpass filter and sends it to OSM’s servers. The result is an &lt;code&gt;osmdata&lt;/code&gt; object containing various items. The item I’m interested in is the &lt;code&gt;osm_lines&lt;/code&gt; which is a set of &lt;code&gt;sf&lt;/code&gt; linestrings. These are the way objects representing highway segments. The query has returned 44 highway segments that intersected the bounded box of our 4 points (at the time of posting).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;this.bbox &amp;lt;- st_bbox(df.sf)
osm.road.types = c(&amp;quot;motorway&amp;quot;, &amp;quot;motorway_link&amp;quot;, &amp;quot;trunk&amp;quot;, &amp;quot;trunk_link&amp;quot;, &amp;quot;primary&amp;quot;, &amp;quot;primary_link&amp;quot;, &amp;quot;secondary&amp;quot;, 
                   &amp;quot;secondary_link&amp;quot;, &amp;quot;tertiary&amp;quot;, &amp;quot;unclassified&amp;quot;, &amp;quot;residential&amp;quot;)
out &amp;lt;- opq (this.bbox) %&amp;gt;%
            #add_osm_feature (key = &amp;quot;highway&amp;quot;, value = c(osm.road.types, paste0(osm.road.types, &amp;quot;_link&amp;quot;))) %&amp;gt;%
            osmdata::add_osm_feature (key = &amp;quot;highway&amp;quot;, value = osm.road.types) %&amp;gt;%
            osmdata::osmdata_sf(quiet = F)
## Issuing query to Overpass API ...
## Rate limit: 2
## Query complete!
## converting OSM data to sf format
out
## Object of class &amp;#39;osmdata&amp;#39; with:
##                  $bbox : 53.481176,-2.235675,53.48451,-2.232086
##         $overpass_call : The call submitted to the overpass API
##                  $meta : metadata including timestamp and version numbers
##            $osm_points : &amp;#39;sf&amp;#39; Simple Features Collection with 199 points
##             $osm_lines : &amp;#39;sf&amp;#39; Simple Features Collection with 44 linestrings
##          $osm_polygons : &amp;#39;sf&amp;#39; Simple Features Collection with 0 polygons
##        $osm_multilines : NULL
##     $osm_multipolygons : NULL
road.lines &amp;lt;- out$osm_lines
nrow(road.lines)
## [1] 44&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;get-candidate-closest-roads-to-points&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Get candidate closest roads to points&lt;/h3&gt;
&lt;p&gt;Soon I’ll find the closest highway segment to each point, but if I had thousands of points and highways it would be wise to only check a subset of highways by associating nearby highways to each point. I’ll do that next. First I’ll project the points and the road segments to a suitable coordinate reference system (for Manchester, the UK Ordnance Survay EPSG: 27700 is a good choice), apply a 50m buffer to the points, then identify which road segments intersect with this buffer.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df.sf.tf &amp;lt;- st_transform(df.sf, 27700) # US National Atlas Equal Area projection
road.lines.tf &amp;lt;- st_transform(road.lines, 27700)
buffer.size &amp;lt;- 50
df.sf.tf.bf &amp;lt;- st_buffer(df.sf.tf, buffer.size)
intersected.items &amp;lt;- st_intersects(df.sf.tf.bf, road.lines.tf, sparse = F)
dim(intersected.items)
## [1]  4 44&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The dimensions show I have 4 rows, one for each of the 4 points, and 44 columns, one for each OSM road segment within the bounding box. The matrix contains TRUE/FALSE values where TRUE indicates a point of intersection.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;get-the-closest-road-segment&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Get the closest road segment&lt;/h3&gt;
&lt;p&gt;So now, using the location of TRUE values in each row or the &lt;code&gt;intersected.items&lt;/code&gt; matrix, I can subset the &lt;code&gt;road.lines&lt;/code&gt; so that the nearest highway search is constrained to a much smaller number of highway segments (ones within 50m).
The &lt;code&gt;st_coordinates&lt;/code&gt; function is useful to return just the coordinate information from an &lt;code&gt;sf&lt;/code&gt; object, and the &lt;code&gt;dist2Line&lt;/code&gt; function from the &lt;code&gt;geosphere&lt;/code&gt; package calculates the shortest distance between a point and a polyline (There are some good details about doing this type of calculation at the &lt;a href=&#34;https://www.movable-type.co.uk/scripts/latlong.html&#34;&gt;Movable Type website&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;number.of.point &amp;lt;- nrow(intersected.items)
distances.vect &amp;lt;- matrix(NA_real_, nrow = nrow(df.sf.tf), ncol = 4)
colnames(distances.vect) &amp;lt;- c(&amp;quot;distance&amp;quot;, &amp;quot;lon&amp;quot;, &amp;quot;lat&amp;quot;, &amp;quot;ID&amp;quot;)
for (i in seq_len(number.of.point)) {
  # Out of all 44 road segments, get the index of the ones that are within 50m of point i. 
  original.road.idx &amp;lt;- which(intersected.items[i, ] == TRUE)
  distances.vect.temp  &amp;lt;- dist2Line(p = st_coordinates(df.sf[i, ]), line = as_Spatial(road.lines[original.road.idx, ]))
  distances.vect.temp[1, &amp;quot;ID&amp;quot;] &amp;lt;- original.road.idx[distances.vect.temp[1, &amp;quot;ID&amp;quot;]]
  distances.vect[i, ] &amp;lt;- distances.vect.temp
}
distances.vect
##      distance       lon      lat ID
## [1,] 5.061288 -2.232137 53.48448 43
## [2,] 3.500525 -2.235712 53.48430 10
## [3,] 6.111912 -2.233558 53.48407  5
## [4,] 5.541079 -2.232491 53.48122 19&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So now I’ve got the nearest road segments &lt;em&gt;and&lt;/em&gt; the coordinates of the nearest point on the road segments to the original points. These are stored in the lon/lat columns of &lt;code&gt;distances.vec&lt;/code&gt;. So the original vague points are now &lt;em&gt;snapped&lt;/em&gt; to actual highway locations which is a bonus.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;get-the-road-section-bearings&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Get the road section bearings&lt;/h3&gt;
&lt;p&gt;Next I’ll extract the chosen 4 road segments from the full set of 44 and add the useful features I’ve just created so far. Getting the coordinates of the first and last points is a bit fiddly. I’m using &lt;code&gt;data.table&lt;/code&gt; for this. When retrieving the coordinates via &lt;code&gt;st_coordinates&lt;/code&gt; a third column labelled &lt;code&gt;L1&lt;/code&gt; is created with a group ID of each polyline object. This can be used as a grouping variable in data.table. The &lt;code&gt;.SD[...]&lt;/code&gt; syntax holds the sub-data.table once the full data.table has been split by the grouping variable, finally 1 and &lt;code&gt;.N&lt;/code&gt; are the first row and last row of each sub-data.table. There’s other ways to do this but the speed of &lt;code&gt;data.table&lt;/code&gt; would pay off if I had thousands of points.
Once we have the beginning and end coordinate pairs it’s straightforward to call the &lt;code&gt;bearing&lt;/code&gt; function from the &lt;code&gt;geosphere&lt;/code&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;out &amp;lt;- road.lines[as.integer(distances.vect[, &amp;quot;ID&amp;quot;]), ]
out$dist.to.nearest &amp;lt;- distances.vect[, &amp;quot;distance&amp;quot;]
out$snap.lat &amp;lt;- distances.vect[, &amp;quot;lat&amp;quot;]
out$snap.lon &amp;lt;- distances.vect[, &amp;quot;lon&amp;quot;]
matching.road.lines.coords &amp;lt;- data.table::as.data.table(st_coordinates(out))
matching.road.lines.coords.begin &amp;lt;- as.matrix(matching.road.lines.coords[, .SD[1, .(X, Y)], by = &amp;quot;L1&amp;quot;][, L1 := NULL])
matching.road.lines.coords.end &amp;lt;- as.matrix(matching.road.lines.coords[, .SD[.N, .(X, Y)], by = &amp;quot;L1&amp;quot;][, L1 := NULL])
matching.road.lines.bearing &amp;lt;- geosphere::bearing(matching.road.lines.coords.begin, matching.road.lines.coords.end)
out$bearing &amp;lt;- (matching.road.lines.bearing + 360) %% 360
out$bearing
## [1] 133.2409 316.6075 217.5574 258.1974&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plot-with-estimated-bearing&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Plot with estimated bearing&lt;/h3&gt;
&lt;p&gt;In order to visualise the estimated road bearing for my 4 points I need to add arrow endpoints information. Some trigonometry wil accomplish this (the 0.00025 value is determines the length of the direction arrow):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;out$delta.x &amp;lt;- sin((pi*out$bearing) / 180) * 0.00025
out$delta.y &amp;lt;- cos((pi*out$bearing) / 180) * 0.00025&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now I can plot the snapped locations and show an arrow indicating the highway bearing over a basemap for visual validation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-07-06-collecting-highway-bearings_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;The results are pretty good, definitely good enough to classify a point into one of the 8 compass bearing directions: N, NE, E… etc. In this post I’ve explored working with &lt;code&gt;sf&lt;/code&gt; spatial points, generated and run an OSM overpass filter, and done some useful visualisation with &lt;code&gt;Leaflet&lt;/code&gt; and &lt;code&gt;ggmap&lt;/code&gt;. I’m sure there are things I could tidy and optimise here but I hope you found this a little useful.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An example preprint / working paper</title>
      <link>/publication/preprint/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      <guid>/publication/preprint/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-academic&#34;&gt;Create slides in Markdown with Academic&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt; | 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://spectrum.chat/academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0100</pubDate>
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Terms</title>
      <link>/terms/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0100</pubDate>
      <guid>/terms/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example journal article</title>
      <link>/publication/journal-article/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>/publication/journal-article/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>/publication/conference-paper/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>/publication/conference-paper/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
